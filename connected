import os
import time
import requests
import sys

RED = "\033[91m"
GREEN = "\033[92m"
RESET = "\033[0m"

# ---------------- GitHub Settings ----------------
KEYS_URL = "https://raw.githubusercontent.com/xoduhs/ConnectedOpti/main/licenses.txt"  # This file contains all keys, one per line

# ---------------- Functions ----------------
def clear_screen():
    os.system('cls' if os.name=='nt' else 'clear')

def show_connected_art():
    clear_screen()
    art = [
        "|----------------------------------------------|",
        "          Welcome To Connected                 |",
        "|----------------------------------------------|",
        "   ___ ___  _ __  _ __   ___  ___| |_ ___  __| |",
        "  / __/ _ \\| '_ \\| '_ \\ / _ \\/ __| __/ _ \\/ _` |",
        " | (_| (_) | | | | | | |  __/ (__| ||  __/ (_| |",
        "  \\___\\___/|_| |_|_| |_|\\___|\\___|\\__\\___|\\__,_|",
        "-------------------------------------------------|"
    ]
    for line in art:
        for char in line:
            print(f"{RED}{char}{RESET}", end='', flush=True)
            time.sleep(0.005)
        print()
    time.sleep(0.5)

def fetch_keys():
    try:
        r = requests.get(KEYS_URL)
        r.raise_for_status()
        return [line.strip() for line in r.text.splitlines()]
    except Exception as e:
        print(f"{RED}Failed to fetch keys: {e}{RESET}")
        sys.exit()

def main_menu():
    while True:
        clear_screen()
        print(f"{RED}[1] System Cleanup{RESET}")
        print(f"{RED}[2] Performance Boost{RESET}")
        print(f"{RED}[3] Network Optimization{RESET}")
        print(f"{RED}[4] Maintenance{RESET}")
        print(f"{RED}[0] Exit{RESET}")
        choice = input(f"{RED}Choose a tab: {RESET}")
        if choice == '0':
            print(f"{RED}Exiting...{RESET}")
            break
        else:
            print(f"{GREEN}Selected option {choice} (demo){RESET}")
            time.sleep(1)

# ---------------- Startup / Key Check ----------------
def run_opti():
    clear_screen()
    user_key = input(f"{RED}Enter your license key: {RESET}").strip()
    valid_keys = fetch_keys()
    if user_key in valid_keys:
        show_connected_art()
        main_menu()
    else:
        print(f"{RED}Invalid key!{RESET}")
        time.sleep(2)
        sys.exit()

if __name__ == "__main__":
    run_opti()
